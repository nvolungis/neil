.area {
  position: relative;
  overflow: hidden;
  @include box-sizing(border-box);
}

.border {
  @include transition-property(transform);
  @include transition-duration(100ms);
  background: black;
  position: absolute;
}

.border-top, .border-bottom {
  width: 100%;
  height: 7px;
  left: 0;
}

.border-left, .border-right {
  width: 7px;
  height: 100%;
  top: 0;
}

.area-thin-border {
  .border-left, .border-right {
    width: 3px;
  }

  .border-top, .border-bottom {
    height: 3px;
  }
}

.border-top {
  top: 0;
  @include transform(translate3d(-100%, 0, 0));
}

.border-right {
  right: 0;
  @include transform(translate3d(0, -100%, 0));
}

.border-bottom {
  bottom: 0;
  @include transform(translate3d(100%, 0, 0));
}

.border-left {
  left: 0;
  @include transform(translate3d(0, 100%, 0));
}


.active {
  .border-top,
  .border-right,
  .border-bottom,
  .border-left {
    @include transform(translate3d(0, 0, 0));
  }

  $delays: 0, 800, 1000, 1200, 1400, 1600;
  $props: border-top, border-right, border-bottom, border-left;

  @for $i from 1 through length($props){
    $prop: nth($props, $i);

      @each $delay in $delays {
      .delay-#{$delay} {
        & > .#{$prop} {
          @include transition-delay(($i - 1) * 100 + $delay + ms);
        }
      }
    }
  }

  
}
